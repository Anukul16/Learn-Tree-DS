/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    long min=Long.MAX_VALUE,secondMin=Long.MAX_VALUE;
    public int findSecondMinimumValue(TreeNode root) {
        if(root==null)return 0;
        dfs(root);
        return  secondMin!=Long.MAX_VALUE?(int)secondMin:-1;

    }
    void dfs(TreeNode root){
        if(root==null)return;
        dfs(root.left);
        if(root.val<min){
            secondMin=min;
            min=root.val;
        }else if(root.val<secondMin && root.val!=min){
            secondMin=root.val;
        }
        dfs(root.right);

    }
}
