/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 class Solution{
    public int sumOfLeftLeaves(TreeNode root){
        if(root==null)return 0;
        int ans=0;
        if(root.left!=null && root.left.left==null && root.left.right==null)ans=root.left.val;
        return ans+sumOfLeftLeaves(root.left)+sumOfLeftLeaves(root.right);
    }
 }
// class Solution {
//     int ans=0;
//     boolean isLeaf(TreeNode root){
//         return root.left==null && root.right==null;
//     }
//     public int sumOfLeftLeaves(TreeNode root) {
//         if(root==null)return 0;
//         dfs(root,false);
//         return ans;
//     }
//     void dfs(TreeNode root,boolean isLeft){
//         if(isLeaf(root) && isLeft==true){
//             ans+=root.val;
//             return;
//         }
//         if(root.left!=null)dfs(root.left,true);
//         if(root.right!=null)dfs(root.right,false);
//     }
// }
